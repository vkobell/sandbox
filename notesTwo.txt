15 Introduction to plotting and visualizing data (15-16)

matplotlib - A packcage that can be used for plotting in python. It must be installed seperately since it is not installed by default when you install python.
EXAMPLE" "import matplotlib.pyplot as plt"
Example explained: The program first imports the pyplot module from the matplotlib package, renaming the matplotlib.pyplot to plt using the "as" keyword.

"as": Renames an importent module or package 
plt.show(): This fuhnction displays the graph
plot.plot(): This function plots data onto the graph. plot() aceepts vaious argyments.
EX:
import matplotlib.pyplot as plt

with open('ocean_temp.csv') as temp_file:
    temps = []
    for t in temp_file:
        temps.append(float(t))

temp_years = range(1850, 2012)
plt.plot(temp_years, temps)

pirate_years = range(1850, 2025, 25)
num_pirates_thousands = [20, 17, 15, 5, 0.4, 0.05, 0.025]
plt.plot(pirate_years, num_pirates_thousands)
plt.show()

Styling plots

format string: An argument that specifies the color and style of the plotted line
Example: plot(x_values, y_values, 'r--') uses 'r' to specify color red and '--' to specify a dash line
Examples of variety:
1. b - Blue
2. g - Green 
3. r - Red 
4. w - White
5. k - Black
6. y - Yellow
7. m - Magenta
8. c - Cyan
9. - - Solid line
10. -- - Dashed line
11. -. - Dashed-dot line
12. : - Dotted line
13. . - Point Marker
14. , - Pixel Marker 
15. o - Circle Marker
16. + - Plus Marker
17. X - X Marker
18. v - Triangle-down Marker
19. ^ - Triangle-up Marker
20. < - Triangle-left Marker
21. > - Triangle-right Marker 
22. * - Star Marker
23. 1 - Tri-down marker 
24. 2 - Tri-up marker
25. 3 - Tri-left marker
26. 4 - Tri-right marker
27. h - Hexagon1 marker
28. H - Hexagon2 marker
29. D - Diamond marker
30. d - Thin diamond marker
31. | - Vertical line marker
32. - - Horizontal line marker
33. s - Square marker 

Line property: Attribute of the line object created by matplotlib when plot() is called
Line Properties:

alpha - float - alpha compositing enables transpherancy 
antiliased - Boolean - Enabled anti-aliasing of the line
color - A matplotlib color - Color of the markers, line
solid_capstyle - 'butt', 'round', or 'projecting' - How the cap of a line appears
solid_joinstyle	- 'miter', 'round', or 'bevel' - How the join of a line appears
data - [x_data, y_data] - The arrays of x and y coordinates
label - string - The label to use for the line
linestyle - '-', '--', '-.', ':', ... (see above) - The style of the line
linewidth - float - The width of the line when drawn.
marker - '+', ',', '.', '1', '2', ... (see above) - The style of the marker to use
markersize - float - The size of the marker
visible	- Boolean - Show/hide the line

plt.axis(): function is used to set the range of the x and y axes.
A single list argument specifies the minimum and maximum values of each axis: [min_x, max_x, min_y, max_y]. Above, the axes of the signal frequency plot are set to show only the interesting region of the plot.
The twinx() function creates a second axis on a plot.

16.1 Searching and algorithms
Algorithm - Sequence of steps for accomplishing a task
Linear Search - Search algorithm that starts from the beginning of a list and checks each element until the search key is found or the end of the list is reached