11.7 Standard Library
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
|Module name	                              Description	                                                            Documentation link                                  |
|datetime	                              Creation and editing of dates and times objects	                        https://docs.python.org/3/library/datetime.html         |
|random	                                      Functions for working with random numbers	                                https://docs.python.org/3/library/random.html           |
|copy	                                      Create complete copies of objects	                                        https://docs.python.org/3/library/copy.html             |
|time	                                      Get the current time, convert time zones, sleep for a number of seconds	https://docs.python.org/3/library/time.html             |
|math	                                      Mathematical functions	                                                https://docs.python.org/3/library/math.html             |
|os	                                      Operating system informational and management helpers	                https://docs.python.org/3/library/os.html               |
|sys	                                      System specific environment or configuration helpers	                https://docs.python.org/3/library/sys.html              |
|pdb	                                      The Python interactive debugger	                                        https://docs.python.org/3/library/pdb.html              |
|urllib	                                      URL handling functions, such as requesting web pages	                https://docs.python.org/3/library/urllib.html           |
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Terms:
1. Dependency - A module being required by another program is often called a dependency.
2. Script - A script is the file being executed by the interpretor, which may import other files as modules


Module Notes:
1. A modules filename should always end with ".py"

12.7
CSV or Comma Seperated Values - Simple text based file format that use commas to seperate data items called fields
Fields - The values in each row of the CSV file seperated by commas
    Example:
    Name, Age, City
    Alice, 30, New York
    Bob, 25, Dallas
    Noye: In this example, "Name", "Age", and "City" are fields
CSV Module: Can be used to help read and write files in the csv format (example: grades_reader = csv.reader()).


13.1-13.3
Base: A class that can serve as the basis for another class is called a base class. Derived classes inherit fom base classes.
Inheritance Tree: Describes the heiarchy between base and derived classes
Note: A derived class inherits the attriubutes of the base class and then adds additional attributes. 

EX: 
class baseClassName:
    code

class childClassName(baseClassName):
    code that calls attributes from base class to use with new code here

override = display() - 'The purpose of the display() method is to provide a way to easily print out the relevant information about an Item or Produce object. This can be useful for debugging, testing, or displaying the object's data in a human-readable format.'

has-a and is-a 

mother object is has-a string object and has child objects but no inheritance is involved
has-a = composition
is-a - inheritance

A pear 'is a' kind of fruit. Pear does not 'have a' fruit, nor does fruit 'have a' pear.
pear/fruit is-a
house/door - has-a

inheriting from multiple base classes:
    class VampireBat(WingedAnimal, Mammal):  # Inherit from WingedAnimal, Mammal classes
        # ...

Mixins: Classes that provide some addition behavor 

A programmer commonly performs unit testing, testing the individual components of a program, such as specific methods, class interfaces, data structures, and so on. The Python standard library unittest module implements unit testing functionality:

a unit test performs ASSERTIONS to check if a computed value meets certain requirements

Method	Checks that
assertEqual(a, b)	a == b
assertNotEqual(a,b)	a != b
assertTrue(x)	bool(x) is True
assertFalse(x)	bool(x) is False
assertIs(a, b)	a is b
assertIsNot(a,b)	a is not b
assertIsNone(x)	x is None
assertIsNotNone(x)	x is not None
assertIn(a, b)	a in b
assertNotIn(a, b)	a not in b
assertAlmostEqual(a, b)	round(a - b, 7) == 0
assertGreater(a, b)	a > b
assertGreaterEqual(a, b)	a >= b
assertLess(a, b)	a < b
assertLessEqual(a, b)	a <= b

CHAPTER 14: Recursion

Recursive Function - A function that solves a problem by solving smaller instances of the same problem. Useful for demonstration recursion.
Recursion: Recursion is the process a procedure goes through when one of the steps of the procedure involves invoking the procedure itself
Example: Counting down is easily done instead of using a loop.

int recursion(x)
{
    if  (x==0) --> base case
    return;
    recursion (x-1); ---> function being called by itself again
}
-----------------------------------------------------------
def count_down(count):
    if count == 0:            
        print('Go!')                  
    else:                        
        print(count)             
        count_down(count-1)        
            
count_down(2)